// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsychometricsV2.Infrastructure.Persistence;

#nullable disable

namespace PsychometricsV2.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250421103507_AddUniqueCodeConstraints")]
    partial class AddUniqueCodeConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemSubGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MscaaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ItemSubGroupId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResponseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("ResponseId");

                    b.ToTable("ItemResponses");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemSubGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemSubGroupTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("ItemSubGroupTypeId");

                    b.ToTable("ItemSubGroups");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemSubGroupType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("ItemSubGroupTypes");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Response", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CalendarYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MscaaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ResponseValue")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeachingPeriod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("StudentId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.StandardSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("EXCScore")
                        .HasColumnType("float");

                    b.Property<double?>("MaxScoreRaw")
                        .HasColumnType("float");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PassingScore")
                        .HasColumnType("float");

                    b.Property<int?>("Phase")
                        .HasColumnType("int");

                    b.Property<string>("RecordMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YearLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StandardSettings");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeOnEntry")
                        .HasColumnType("int");

                    b.Property<int>("Block")
                        .HasColumnType("int");

                    b.Property<int>("CandidateNumber")
                        .HasColumnType("int");

                    b.Property<string>("DANU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalTutorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestQualificationOnEntry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNonLocalWP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalTutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionofDomicile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCJCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocioEconomicClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfEntry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Item", b =>
                {
                    b.HasOne("PsychometricsV2.Domain.Entities.ItemSubGroup", "ItemSubGroup")
                        .WithMany("Items")
                        .HasForeignKey("ItemSubGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemSubGroup");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemResponse", b =>
                {
                    b.HasOne("PsychometricsV2.Domain.Entities.Item", "Item")
                        .WithMany("ItemResponses")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PsychometricsV2.Domain.Entities.Response", "Response")
                        .WithMany("ItemResponses")
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Response");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemSubGroup", b =>
                {
                    b.HasOne("PsychometricsV2.Domain.Entities.ItemGroup", "ItemGroup")
                        .WithMany("ItemSubGroups")
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PsychometricsV2.Domain.Entities.ItemSubGroupType", "ItemSubGroupType")
                        .WithMany("ItemSubGroups")
                        .HasForeignKey("ItemSubGroupTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemGroup");

                    b.Navigation("ItemSubGroupType");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Response", b =>
                {
                    b.HasOne("PsychometricsV2.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PsychometricsV2.Domain.Entities.Student", "Student")
                        .WithMany("Responses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Item", b =>
                {
                    b.Navigation("ItemResponses");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemGroup", b =>
                {
                    b.Navigation("ItemSubGroups");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemSubGroup", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.ItemSubGroupType", b =>
                {
                    b.Navigation("ItemSubGroups");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Response", b =>
                {
                    b.Navigation("ItemResponses");
                });

            modelBuilder.Entity("PsychometricsV2.Domain.Entities.Student", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
